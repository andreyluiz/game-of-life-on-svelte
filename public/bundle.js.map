{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Rule.svelte","../src/RuleForm.svelte","../src/Rules.svelte","../src/lib/world.js","../src/Controls.svelte","../src/World.svelte","../src/lib/util.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  const labels = [\"Dead\", \"Alive\"];\n  export let id, is, has, becomes;\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  function handleButtonClick() {\n    dispatch(\"removerule\", { id });\n  }\n</script>\n\n<tr>\n  <td>{labels[is]}</td>\n  <td>{has.join(', ')}</td>\n  <td>{labels[becomes]}</td>\n  <td>\n    <button on:click={handleButtonClick}>x</button>\n  </td>\n</tr>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  let dispatch = createEventDispatcher();\n\n  let is = 1,\n    has = [],\n    becomes = 1;\n\n  function handleIsChange(event) {\n    is = event.target.value;\n  }\n\n  function handleHasChange(event) {\n    has = event.target.value.split(\",\");\n  }\n\n  function handleBecomesChange(event) {\n    becomes = event.target.value;\n  }\n\n  function handleButtonClick() {\n    dispatch(\"addrule\", { is, has, becomes });\n    has = [];\n  }\n</script>\n\n<tr>\n  <td>\n    <select name=\"is\" value={is} on:change={handleIsChange}>\n      <option value={1}>Alive</option>\n      <option value={0}>Dead</option>\n    </select>\n  </td>\n  <td>\n    <input\n      name=\"has\"\n      type=\"text\"\n      value={has.join(',')}\n      on:change={handleHasChange} />\n  </td>\n  <td>\n    <select name=\"becomes\" value={becomes} on:change={handleBecomesChange}>\n      <option value={1}>Alive</option>\n      <option value={0}>Dead</option>\n    </select>\n  </td>\n  <td>\n    <button on:click={handleButtonClick}>Add</button>\n  </td>\n</tr>\n","<script>\n  import Rule from \"./Rule.svelte\";\n  import RuleForm from \"./RuleForm.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n\n  let dispatch = createEventDispatcher();\n\n  export let rules;\n</script>\n\n<style>\n  th {\n    text-align: left;\n  }\n</style>\n\n<table>\n  <thead>\n    <tr>\n      <th>Is</th>\n      <th>Has</th>\n      <th>Becomes</th>\n    </tr>\n  </thead>\n  <tbody>\n    {#each rules as rule}\n      <Rule {...rule} on:removerule />\n    {/each}\n    <RuleForm on:addrule />\n  </tbody>\n</table>\n","const ALIVE = 1;\nconst DEAD = 0;\n\nexport class World {\n\tconstructor(source = []) {\n\t\tthis.source = source;\n\t\tthis.row = 0;\n\t\tthis.column = 0;\n\t}\n\n\tsetCell(row, column) {\n\t\tthis.row = row;\n\t\tthis.column = column;\n\t}\n\n\tgetCellStatus() {\n\t\treturn this.source[this.row][this.column];\n\t}\n\n\tisCellAlive() {\n\t\treturn this.getCellStatus() === ALIVE;\n\t}\n\n\tgetTopLeft() {\n\t\tif (this.source[this.row - 1] && this.source[this.row - 1][this.column - 1]) {\n\t\t\treturn this.source[this.row - 1][this.column - 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetTop() {\n\t\tif (this.source[this.row - 1]) {\n\t\t\treturn this.source[this.row - 1][this.column];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetTopRight() {\n\t\tif (this.source[this.row - 1] && this.source[this.row - 1][this.column + 1]) {\n\t\t\treturn this.source[this.row - 1][this.column + 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetRight() {\n\t\tif (this.source[this.row] && this.source[this.row][this.column + 1]) {\n\t\t\treturn this.source[this.row][this.column + 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetBottomRight() {\n\t\tif (this.source[this.row + 1] && this.source[this.row + 1][this.column + 1]) {\n\t\t\treturn this.source[this.row + 1][this.column + 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetBottom() {\n\t\tif (this.source[this.row + 1]) {\n\t\t\treturn this.source[this.row + 1][this.column];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetBottomLeft() {\n\t\tif (this.source[this.row + 1] && this.source[this.row + 1][this.column - 1]) {\n\t\t\treturn this.source[this.row + 1][this.column - 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetLeft() {\n\t\tif (this.source[this.row] && this.source[this.row][this.column - 1]) {\n\t\t\treturn this.source[this.row][this.column - 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetNeighborsCount() {\n\t\tconst top = this.getTop();\n\t\tconst right = this.getRight();\n\t\tconst bottom = this.getBottom();\n\t\tconst left = this.getLeft();\n\t\tconst topLeft = this.getTopLeft();\n\t\tconst topRight = this.getTopRight();\n\t\tconst bottomRight = this.getBottomRight();\n\t\tconst bottomLeft = this.getBottomLeft();\n\t\treturn top + right + bottom + left + topLeft + topRight + bottomRight + bottomLeft;\n\t}\n}\n\nconst isEmpty = object => Object.keys(object).length === 0;\n\nexport const nextWorld = (input, rules) => {\n\tconst output = [];\n\n\tconst world = new World(input);\n\n\tfor (let row = 0, lenR = input.length; row < lenR; row += 1) {\n\t\tconst rowArray = [];\n\n\t\tfor (let column = 0, lenC = input[row].length; column < lenC; column += 1) {\n\t\t\tworld.setCell(row, column);\n\n\t\t\tconst status = world.getCellStatus();\n\t\t\tconst neighbors = world.getNeighborsCount();\n\t\t\tconst matchedRule = rules.find(rule => rule.is === status && rule.has.includes(neighbors));\n\n\t\t\tif (!matchedRule || isEmpty(matchedRule)) {\n\t\t\t\trowArray.push(0);\n\t\t\t} else {\n\t\t\t\trowArray.push(matchedRule.becomes);\n\t\t\t}\n\t\t}\n\n\t\toutput.push(rowArray);\n\t}\n\n\treturn output;\n};\n\nexport const initialWorld = {\n\tcols: 20,\n\trows: 20,\n};\n\nexport const buildNewWorld = (rows, cols) => {\n\tconst world = new Array(cols);\n\tfor (let i = 0; i < cols; i += 1) {\n\t\tworld[i] = new Array(rows).fill(0);\n\t}\n\treturn world;\n};\n\nexport const template = [\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n","<script>\n  import { template } from \"./lib/world\";\n  import { createEventDispatcher } from \"svelte\";\n\n  let dispatch = createEventDispatcher();\n\n  export let step,\n    rows = 20,\n    cols = 20,\n    speed = 500,\n    started = false;\n\n  function handleStartStop() {\n    if (started) {\n      dispatch(\"stop\");\n    } else {\n      dispatch(\"start\");\n    }\n  }\n\n  function handleStop() {}\n\n  function handleClear() {\n    dispatch(\"clear\");\n  }\n\n  function handleRowsChange(e) {\n    dispatch(\"updateworld\", {\n      speed,\n      rows: parseInt(e.target.value, 10),\n      cols\n    });\n  }\n\n  function handleColsChange(e) {\n    dispatch(\"updateworld\", {\n      speed,\n      rows,\n      cols: parseInt(e.target.value, 10)\n    });\n  }\n\n  function handleSpeedChange(e) {\n    dispatch(\"updatespeed\", {\n      speed: parseInt(e.target.value, 10)\n    });\n  }\n\n  function handleTemplateClick() {\n    dispatch(\"forceworld\", { world: template });\n  }\n</script>\n\n<style>\n  .container {\n    border: 1px solid grey;\n    padding: 12px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .row {\n    margin-bottom: 12px;\n    flex: 1;\n  }\n\n  .step {\n    background: lightgray;\n    border-radius: 4px;\n    padding: 4px;\n    margin-bottom: 12px;\n    text-align: center;\n  }\n\n  .step-text {\n    color: gray;\n  }\n\n  .button {\n    background-color: steelblue;\n    font-weight: normal;\n    outline: none;\n    width: 100%;\n    color: white;\n    border: steelblue;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  .title {\n    font-size: 14px;\n    margin-bottom: 4px;\n  }\n\n  input[type=\"number\"] {\n    font-size: 14px;\n    padding: 4px;\n    width: 100%;\n  }\n\n  input[type=\"range\"] {\n    width: 100%;\n    -webkit-appearance: none;\n    outline: none;\n    margin: 18px 0;\n    width: 100%;\n  }\n\n  input[type=\"range\"]:focus {\n    outline: none;\n  }\n  input[type=\"range\"]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    background: steelblue;\n    border-radius: 1.3px;\n    border: 0.2px solid #010101;\n  }\n  input[type=\"range\"]::-webkit-slider-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -14px;\n  }\n  input[type=\"range\"]:focus::-webkit-slider-runnable-track {\n    background: #367ebd;\n  }\n  input[type=\"range\"]::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    background: steelblue;\n    border-radius: 1.3px;\n    border: 0.2px solid #010101;\n  }\n  input[type=\"range\"]::-moz-range-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n  }\n  input[type=\"range\"]::-ms-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    border-width: 16px 0;\n    color: transparent;\n  }\n  input[type=\"range\"]::-ms-fill-lower {\n    background: #2a6495;\n    border: 0.2px solid #010101;\n    border-radius: 2.6px;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  }\n  input[type=\"range\"]::-ms-fill-upper {\n    background: steelblue;\n    border: 0.2px solid #010101;\n    border-radius: 2.6px;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  }\n  input[type=\"range\"]::-ms-thumb {\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    border: 1px solid #000000;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #ffffff;\n    cursor: pointer;\n  }\n  input[type=\"range\"]:focus::-ms-fill-lower {\n    background: steelblue;\n  }\n  input[type=\"range\"]:focus::-ms-fill-upper {\n    background: #367ebd;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <button class=\"button\" on:click={handleStartStop}>\n      {started ? 'Stop' : 'Start'}\n    </button>\n  </div>\n  <div class=\"row\">\n    <button class=\"button\" on:click={handleClear}>Reset</button>\n  </div>\n  <div class=\"step\">\n    <span class=\"step-text\">Step {step}</span>\n  </div>\n  <div class=\"row\">\n    <span class=\"title\">Rows</span>\n    <input\n      name=\"rows\"\n      type=\"number\"\n      value={rows}\n      on:change={handleRowsChange} />\n  </div>\n  <div class=\"row\">\n    <span class=\"title\">Columns</span>\n    <input\n      name=\"cols\"\n      type=\"number\"\n      value={cols}\n      on:change={handleColsChange} />\n  </div>\n  <div class=\"row\">\n    <span class=\"title\">Speed ({speed})</span>\n    <input\n      name=\"speed\"\n      type=\"range\"\n      value={speed}\n      on:change={handleSpeedChange}\n      min=\"1\"\n      max=\"1001\" />\n  </div>\n  <div class=\"row\">\n    <button on:click={handleTemplateClick}>Template</button>\n  </div>\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  let dispatch = createEventDispatcher();\n\n  export let world;\n\n  function handleCellClick(rowIndex, columnIndex) {\n    return function() {\n      dispatch(\"cellclick\", {\n        rowIndex,\n        columnIndex\n      });\n    };\n  }\n</script>\n\n<style>\n  .row {\n    display: flex;\n    max-height: 20px;\n  }\n\n  .cell {\n    flex: 0 0 20px;\n    position: relative;\n    display: inline-block;\n    height: 20px;\n    width: 20px;\n    margin: 0;\n    padding: 0;\n    outline: none;\n    border: 1px solid black;\n  }\n\n  .inner-cell {\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 16px;\n    height: 16px;\n    background-color: white;\n  }\n\n  .inner-cell.active {\n    background-color: black;\n  }\n</style>\n\n<div>\n  {#each world as row, rowIndex}\n    <div class=\"row\">\n      {#each row as column, columnIndex}\n        <div class=\"cell\" on:click={handleCellClick(rowIndex, columnIndex)}>\n          <div class=\"inner-cell {column === 1 && 'active'}\" />\n        </div>\n      {/each}\n    </div>\n  {/each}\n</div>\n","export const sleep = ms => new Promise(r => setTimeout(r, ms));\n\nexport const generateId = () =>\n\tMath.random()\n\t\t.toString(36)\n\t\t.substr(2);\n","<script>\n  import Rules from \"./Rules.svelte\";\n  import Controls from \"./Controls.svelte\";\n  import World from \"./World.svelte\";\n  import { buildNewWorld, initialWorld, nextWorld } from \"./lib/world\";\n  import { generateId, sleep } from \"./lib/util\";\n\n  const defaultRules = [\n    {\n      id: generateId(),\n      is: 1,\n      has: [2, 3],\n      becomes: 1\n    },\n    {\n      id: generateId(),\n      is: 0,\n      has: [3],\n      becomes: 1\n    }\n  ];\n\n  let rules = defaultRules;\n  let started = false;\n  let step = 0;\n  let rows = initialWorld.rows;\n  let cols = initialWorld.cols;\n  let speed = 500;\n  let world = buildNewWorld(initialWorld.rows, initialWorld.cols);\n\n  function handleAddRule(event) {\n    const { is, has, becomes } = event.detail;\n    rules = [\n      ...rules,\n      {\n        id: generateId(),\n        is: parseInt(is, 10),\n        has: has.filter(n => n).map(n => parseInt(n, 10)),\n        becomes: parseInt(becomes, 10)\n      }\n    ];\n  }\n\n  function handleRemoveRule(event) {\n    rules = rules.filter(r => r.id !== event.detail.id);\n  }\n\n  function handleStart() {\n    started = true;\n    nextStep();\n  }\n\n  function handleStop() {\n    started = false;\n  }\n\n  function handleClear() {\n    world = buildNewWorld(rows, cols);\n  }\n\n  function handleUpdateWorld(event) {\n    const { rows: newRows, cols: newCols, speed: newSpeed } = event.detail;\n    rows = newRows;\n    cols = newCols;\n    world = buildNewWorld(newRows, newCols);\n  }\n\n  function handleUpdateSpeed(event) {\n    const { speed: newSpeed } = event.detail;\n    speed = newSpeed;\n  }\n\n  async function nextStep() {\n    if (started) {\n      requestAnimationFrame(() => {\n        step += 1;\n        world = nextWorld(world, rules);\n      });\n      await sleep(1000 - speed);\n      nextStep();\n    }\n  }\n\n  function handleCellClick(event) {\n    const { rowIndex, columnIndex } = event.detail;\n    const newWorld = world.slice(0);\n    const currentValue = newWorld[rowIndex][columnIndex];\n    const newValue = 1 - currentValue;\n    newWorld[rowIndex].splice(columnIndex, 1, newValue);\n    world = newWorld;\n  }\n\n  function handleForceWorld(event) {\n    world = event.detail.world;\n  }\n</script>\n\n<style>\n  :global(*) {\n    box-sizing: border-box;\n  }\n\n  :global(body) {\n    margin: 0;\n    font-family: sans-serif;\n  }\n\n  .simulator {\n    display: flex;\n    margin: 12px;\n  }\n\n  .col {\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 auto;\n  }\n\n  .col.controls {\n    flex: 0 0 200px;\n    margin-right: 12px;\n  }\n\n  .row {\n    flex: 1 1 auto;\n  }\n\n  .row.rules {\n    margin-bottom: 12px;\n  }\n</style>\n\n<div class=\"simulator\">\n  <div class=\"col controls\">\n    <Controls\n      {started}\n      {step}\n      {rows}\n      {cols}\n      {speed}\n      on:start={handleStart}\n      on:stop={handleStop}\n      on:clear={handleClear}\n      on:updateworld={handleUpdateWorld}\n      on:updatespeed={handleUpdateSpeed}\n      on:forceworld={handleForceWorld} />\n  </div>\n  <div class=\"col\">\n    <div class=\"row rules\">\n      <Rules\n        {rules}\n        on:addrule={handleAddRule}\n        on:removerule={handleRemoveRule} />\n    </div>\n    <div class=\"row world\">\n      <World {world} on:cellclick={handleCellClick} />\n    </div>\n  </div>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","component","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","key","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","labels","is","join","becomes","handleButtonClick","id","dispatch","handleIsChange","handleHasChange","handleBecomesChange","split","rule","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","rules","r","ALIVE","World","source","row","column","getCellStatus","getTop","getRight","getBottom","getLeft","getTopLeft","getTopRight","getBottomRight","getBottomLeft","isEmpty","object","keys","nextWorld","input","output","world","lenR","rowArray","lenC","setCell","status","neighbors","getNeighborsCount","matchedRule","find","includes","initialWorld","cols","rows","buildNewWorld","fill","template","started","step","speed","handleStartStop","handleClear","handleRowsChange","handleColsChange","handleSpeedChange","handleTemplateClick","parseInt","handleCellClick","rowIndex","columnIndex","sleep","ms","setTimeout","generateId","Math","random","toString","substr","handleStart","handleStop","handleUpdateWorld","handleUpdateSpeed","handleForceWorld","handleAddRule","handleRemoveRule","async","nextStep","requestAnimationFrame","newRows","newCols","newSpeed","newWorld","newValue","body"],"mappings":"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"}